    private static final ArrayList<String> metal_list = new ArrayList<String>();
    private static File whitelist;

    public static void init() {
        generateWhitelist();
        populateMetalList();
    }

    /*
     * This code was based off the similar methods found in CoFHCore
     */

    /**
     * Generate a text file containing all the blocks and items considered 'metal' (if it doesn't already exist)
     */
    private static void generateWhitelist() {
        BufferedWriter output = null;
        whitelist = new File(Allomancy.configDirectory, "allomancy-whitelist.txt");
        if (!whitelist.exists()) {

            ArrayList<String> defaultList = new ArrayList<>();
            defaultList.add(Items.IRON_AXE.getRegistryName().toString());
            defaultList.add(Items.GOLDEN_AXE.getRegistryName().toString());
            defaultList.add(Items.CHAINMAIL_BOOTS.getRegistryName().toString());
            defaultList.add(Items.GOLDEN_BOOTS.getRegistryName().toString());
            defaultList.add(Items.IRON_BOOTS.getRegistryName().toString());
            defaultList.add(Items.BUCKET.getRegistryName().toString());
            defaultList.add(Items.LAVA_BUCKET.getRegistryName().toString());
            defaultList.add(Items.MILK_BUCKET.getRegistryName().toString());
            defaultList.add(Items.WATER_BUCKET.getRegistryName().toString());
            defaultList.add(Items.CAULDRON.getRegistryName().toString());
            defaultList.add(Items.COMPASS.getRegistryName().toString());
            defaultList.add(Items.FLINT_AND_STEEL.getRegistryName().toString());
            defaultList.add(Items.GOLD_NUGGET.getRegistryName().toString());
            defaultList.add(Items.IRON_NUGGET.getRegistryName().toString());
            defaultList.add(Items.CHAINMAIL_HELMET.getRegistryName().toString());
            defaultList.add(Items.GOLDEN_HELMET.getRegistryName().toString());
            defaultList.add(Items.IRON_HELMET.getRegistryName().toString());
            defaultList.add(Items.GOLDEN_HOE.getRegistryName().toString());
            defaultList.add(Items.IRON_HOE.getRegistryName().toString());
            defaultList.add(Items.GOLDEN_HORSE_ARMOR.getRegistryName().toString());
            defaultList.add(Items.IRON_HORSE_ARMOR.getRegistryName().toString());
            defaultList.add(Items.CHAINMAIL_LEGGINGS.getRegistryName().toString());
            defaultList.add(Items.GOLDEN_LEGGINGS.getRegistryName().toString());
            defaultList.add(Items.IRON_LEGGINGS.getRegistryName().toString());
            defaultList.add(Items.MINECART.getRegistryName().toString());
            defaultList.add(Items.CHEST_MINECART.getRegistryName().toString());
            defaultList.add(Items.HOPPER_MINECART.getRegistryName().toString());
            defaultList.add(Items.FURNACE_MINECART.getRegistryName().toString());
            defaultList.add(Items.TNT_MINECART.getRegistryName().toString());
            defaultList.add(Items.IRON_PICKAXE.getRegistryName().toString());
            defaultList.add(Items.GOLDEN_PICKAXE.getRegistryName().toString());
            defaultList.add(Items.IRON_CHESTPLATE.getRegistryName().toString());
            defaultList.add(Items.CHAINMAIL_CHESTPLATE.getRegistryName().toString());
            defaultList.add(Items.GOLDEN_CHESTPLATE.getRegistryName().toString());
            defaultList.add(Items.CLOCK.getRegistryName().toString());
            defaultList.add(Items.GOLDEN_SHOVEL.getRegistryName().toString());
            defaultList.add(Items.IRON_SHOVEL.getRegistryName().toString());
            defaultList.add(Items.SHEARS.getRegistryName().toString());
            defaultList.add(Items.GOLDEN_APPLE.getRegistryName().toString());
            defaultList.add(Items.GOLDEN_APPLE.getRegistryName().toString());
            defaultList.add(Items.GOLDEN_CARROT.getRegistryName().toString());
            defaultList.add(Items.IRON_SWORD.getRegistryName().toString());
            defaultList.add(Registry.lerasium_nugget.getRegistryName().toString());
            defaultList.add(Registry.allomantic_grinder.getRegistryName().toString());
            defaultList.add(Registry.coin_bag.getRegistryName().toString());
            defaultList.add(Blocks.ANVIL.getRegistryName().toString());
            defaultList.add(Blocks.IRON_TRAPDOOR.getRegistryName().toString());
            defaultList.add(Blocks.IRON_DOOR.getRegistryName().toString());
            defaultList.add(Blocks.CAULDRON.getRegistryName().toString());
            defaultList.add(Blocks.IRON_BARS.getRegistryName().toString());
            defaultList.add(Blocks.HOPPER.getRegistryName().toString());
            defaultList.add(Blocks.PISTON_HEAD.getRegistryName().toString());
            defaultList.add(Blocks.PISTON_EXTENSION.getRegistryName().toString());
            defaultList.add(Blocks.STICKY_PISTON.getRegistryName().toString());
            defaultList.add(Blocks.PISTON.getRegistryName().toString());
            defaultList.add(Blocks.LIGHT_WEIGHTED_PRESSURE_PLATE.getRegistryName().toString());
            defaultList.add(Blocks.HEAVY_WEIGHTED_PRESSURE_PLATE.getRegistryName().toString());
            defaultList.add(Blocks.RAIL.getRegistryName().toString());
            defaultList.add(Blocks.ACTIVATOR_RAIL.getRegistryName().toString());
            defaultList.add(Blocks.DETECTOR_RAIL.getRegistryName().toString());
            defaultList.add(Blocks.GOLDEN_RAIL.getRegistryName().toString());
            defaultList.add(Registry.vial.getRegistryName().toString());
            defaultList.add(Registry.blockIronLever.getRegistryName().toString());

            for (int i = 0; i < Registry.flake_metals.length; i++) {
                defaultList.add(new Item().getByNameOrId("allomancy:" + "flake" + Registry.flake_metals[i]).getRegistryName().toString());
            }

            String[] ores = OreDictionary.getOreNames();
            for (String s : ores) {
                if (s.contains("Copper") || s.contains("Tin") || s.contains("Gold") || s.contains("Iron")
                        || s.contains("Steel") || s.contains("Lead") || s.contains("Silver") || s.contains("Brass")
                        || s.contains("Bronze") || s.contains("Aluminum") || s.contains("Zinc")) {
                    for (ItemStack i : OreDictionary.getOres(s)) {
                        if (i.getItem() != null) {
                            String name = i.getItem().getRegistryName().toString();
                            if (!defaultList.contains(name)) {
                                defaultList.add(name);
                            }
                        }
                    }
                }
            }

            Collections.sort(defaultList);

            try {
                whitelist.createNewFile();
                output = new BufferedWriter(new FileWriter(whitelist));
                output.write("# Add the registry names of blocks or items to the list below for them to be treated as metals \n");

                for (String item : defaultList) {
                    output.write(item + "\n");
                }
                output.close();
                defaultList.clear();
            } catch (Throwable t) {
                t.printStackTrace();
            }

        }
    }

    /**
     * Reads in the whitelist of metal blocks and items
     */
    private static void populateMetalList() {
        try {
            if (!whitelist.exists()) {
                return;
            }

            Scanner scanner = new Scanner(whitelist);
            String[] line;
            String[] tokens;
            while (scanner.hasNext()) {
                line = scanner.next().split("\\n");
                tokens = line[0].split("#");
                if (tokens.length == 1) {
                    metal_list.add(line[0]);
                }
            }
            scanner.close();
        } catch (Throwable t) {
            t.printStackTrace();
        }
    }
